services:
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    restart: unless-stopped
    network_mode: "host"
    env_file:
      - .env
    volumes:
      - django_static:/app/static
      - django_media:/app/media
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        compress: "true"
        tag: "backend/{{.ID}}"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '0.75'

  api_bridge:
    build:
      context: .
      dockerfile: api_bridge/Dockerfile
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      backend:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        compress: "true"
        tag: "api_bridge/{{.ID}}"
    networks:
      - backend_network

#  frontend:
#    build:
#      context: ./frontend
#      dockerfile: Dockerfile
#    restart: unless-stopped
#    ports:
#      - "3000:3000"
#    depends_on:
#      backend:
#        condition: service_healthy
#    logging:
#      driver: "json-file"
#      options:
#        max-size: "10m"
#        max-file: "3"
#        compress: "true"
#        tag: "frontend/{{.ID}}"
#    networks:
#      - backend_network

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8080:80"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      backend:
        condition: service_healthy
      frontend:
        condition: service_started
    volumes:
      - django_static:/app/static
      - django_media:/app/media
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        compress: "true"
        tag: "nginx/{{.ID}}"
    networks:
      - backend_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/nginx-health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
    deploy:
      resources:
        limits:
          cpus: '0.3'

networks:
  backend_network:
    driver: bridge

volumes:
  django_static:
  django_media: 
